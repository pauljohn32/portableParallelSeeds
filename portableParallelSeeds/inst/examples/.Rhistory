library(MASS)
?rmvnorm
?mvrnorm
set.seed(12345)
mvrnorm(n=10, mu = c(0,0,0), sigma = diag(3))
diag(3)
mvrnorm(n=10, mu = c(0,0,0), sigma = diag(3))
mvrnorm(n=10, mu = c(0,0,0), sigma = diag(3))
mvrnorm(n=10, mu = c(0,0,0), Sigma = diag(3))
set.seed(12345)
mvrnorm(n=5, mu = c(0,0,0), Sigma = diag(3))
?makeCluster
cl <- makeCluster(4)
]
)
?head
system.time(x1 <- rnorm(1000))
system.time(x1 <- rnorm(5000))
system.time(x1 <- rnorm(100000))
x2 <- vector(100000, "numeric")
x2 <- vector("numeric", length=100000)
for (i in 1:100000) x2[i] <- rnorm(1)
system.time(x2 <- vector(100000, "numeric"); for (i in 1:100000) x2[i] <- rnorm(1)}
system.time(x2 <- vector(100000, "numeric"); for (i in 1:100000) x2[i] <- rnorm(1))
system.time(x2 <- vector(100000, "numeric"); for (i in 1:100000) x2[i] <- rnorm(1))
system.time({x2 <- vector(100000, "numeric"); for (i in 1:100000) x2[i] <- rnorm(1)})
system.time(x2 <- vector("numeric",100000); for (i in 1:100000) x2[i] <- rnorm(1))
system.time(x2 <- vector("numeric",100000); for (i in 1:100000){x2[i] <- rnorm(1)})
system.time(for (i in 1:100000){x2[i] <- rnorm(1)})
system.time(for (i in 1:100000){x2[i] <- rnorm(1)})
rmvnorm
mvrnorm
?matrix
set.seed(12345)
mvrnorm(n=5, mu = c(0,0,0), Sigma = diag(3))
set.seed(12345)
mvrnorm(n=15, mu = c(0,0,0), Sigma = diag(3))
?mvrnorm
library(help=MASS)
q()
n
library(MASS)
set.seed(12345)
mvrnorm(n=5, mu = c(0,0,0), Sigma = diag(3))
set.seed(12345)
mvrnorm(n=15, mu = c(0,0,0), Sigma = diag(3))
q()
n
serial1
parms
parms
parms
parms[[1]]
parms[1, ]
parms
as.list(parms)
as.list(t(parms))
)
)
head(metaParms)
str(mmm)
length(mmm)
NROW(metaParms)
NROW(metaParms)
metaParms
length(mmm)
summary(mmm[1])
length(mmm[1])
length(mmm[[1]])
mmm[[1]]
mmm[1]
onerow <- metaParms[3, ]
onerow
row.names(onerow)
lapply(1:nReps, runOneSimulation, projSeeds, parm = parms); print(names(onerow))
mmm[[1]]
mmm[[2]][[1]]
 mmm[[4]][[1]]
 mmm[[5]][[1]]
 mmm[[6]][[1]]
length(mmm)
runone14
?apply
oneres <- mmm[[3]][[2]]
oneres$m2
oneres[[2]]
oneres[[2]]$r.square
names(oneres[[2]])
names(oneres[[2]][[2]])
oneres <- mmm[[3]][[2]]
length(oneres)
oneres[[1]]
oneres[[2]]
oneres[[1]]
oneres <- mmm[[3]]
oneres[[1]]
oneres[[2]][[1]]
oneres <- mmm[[3]][[2]]
oneres[[1]]
oneres <- mmm[[3]][[2]]
oneres[[2]]
oneres[[2]][[2]]
length(oneres)
mmm[[5]][[2]]
mmm[[5]]["m1sum"]]
mmm[[5]][["m1sum"]]
mmm[[5]]["m1sum"]
names(mmm[[4]] <- 
)
names(mmm[[4]])
names(mmm[[4]][[1]])
names(mmm[[4]][[2]])
names(mmm[[4]][2])
mmm[[4]][2]
mmm[[4]][[2]]
mmm[[5]][[2]]$r.square
mmm[[5]][[2]][[2]]$r.square
mmm[[5]][[2]][2]$r.square
mmm[[5]][[2]][[2]]
mmm[[5]][[2]][[2]]["r.square"]
mmm[[5]][[2]][[2]]["m1sum"]
mmm[[5]][[2]][[2]]["m1sum"]["r.square"]
mmm[[5]][[2]][[2]]["m1sum"]
mmm[[5]][[2]][[2]]["m1sum"]$r.square
mmm[[5]][[2]][[2]][["m1sum"]]
mmm[[5]][[2]][[2]][["m1sum"]][["r.square"]]
mmm[[5]][[2]][[2]][["m1sum"]]["r.square"]
mmm[[5]][[2]][[2]][["m1sum"]]
names(mmm[[5]][[2]][[2]][["m1sum"]])
mmm[[5]][[2]][[2]][["m1sum"]]$r.squared
debug(getRsquares)
reslist[[1]]
reslist[[2]]
reslist[[2]]
debug(getRsquares)
debug(getRsquares)
reslist[[2]]
reslist[[1]]
reslist[[2]]
reslist[[2]][[2]]
reslist[[2]][[2]][["r.square]]
]
]
)
"
]
"
]
]
)
]
)
)
]
"
debug(lapply)
mod
mod
X
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
cc
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
q
undebug(lapply)
c
c
c
c
undebug(lapply)
c
undebug(getRsquares)
hist(rsqmod5)
rsqmod5
rsqmod5
fix(allRsq)
dim(allRsq)
?par
q()
n
R2range
max(allRsq)
min(allRsq)
R2range
q()
n
R2Range
R2range
R2range*c(0.96, 1.04)
exp(50)
q()
n
